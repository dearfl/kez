use crate::dota2::{Account, Hero, Item};

/// Converted Player type
#[derive(Clone, Debug, Default)]
pub struct Player {
    pub account: Account,
    // pub player_slot: u8,
    // pub team_number: u8,
    // pub team_slot: u8,
    pub hero: Hero,
    // pub hero_variant: u8,
    pub item_0: Item,
    pub item_1: Item,
    pub item_2: Item,
    pub item_3: Item,
    pub item_4: Item,
    pub item_5: Item,
    pub backpack_0: Item,
    pub backpack_1: Item,
    pub backpack_2: Item,
    pub item_neutral: Item,
    pub kills: u8,
    pub deaths: u8,
    pub assists: u8,
    // pub leaver_status: u8,
    pub last_hits: u16,
    pub denies: u16,
    pub level: u8,
    pub net_worth: u32,
    // pub aghanims_scepter: u8,
    // pub aghanims_shard: u8,
    // pub moonshard: u8,
    pub hero_damage: u32,
    pub tower_damage: u32,
    pub hero_healing: u32,
    pub gold: u32,
    pub gold_spent: u32,
    pub scaled_hero_damage: u32,
    pub scaled_tower_damage: u32,
    pub scaled_hero_healing: u32,
    // pub ability_upgrades: Vec<AbilityUpgrade>,
    // pub additional_units: Vec<Unit>,
}

impl From<crate::dota2::get_match_history_by_seq_num::Player> for Player {
    fn from(value: crate::dota2::get_match_history_by_seq_num::Player) -> Self {
        Self {
            account: value.account_id.into(),
            hero: value.hero_id.into(),
            item_0: value.item_0.into(),
            item_1: value.item_1.into(),
            item_2: value.item_2.into(),
            item_3: value.item_3.into(),
            item_4: value.item_4.into(),
            item_5: value.item_5.into(),
            backpack_0: value.backpack_0.into(),
            backpack_1: value.backpack_1.into(),
            backpack_2: value.backpack_2.into(),
            item_neutral: value.item_neutral.into(),
            kills: value.kills,
            deaths: value.deaths,
            assists: value.assists,
            last_hits: value.last_hits,
            denies: value.denies,
            level: value.level,
            net_worth: value.net_worth,
            hero_damage: value.hero_damage,
            tower_damage: value.tower_damage,
            hero_healing: value.hero_healing,
            gold: value.gold,
            gold_spent: value.gold_spent,
            scaled_hero_damage: value.scaled_hero_damage,
            scaled_tower_damage: value.scaled_tower_damage,
            scaled_hero_healing: value.scaled_hero_healing,
        }
    }
}
